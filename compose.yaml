services:
  postgres:
    image: pgvector/pgvector:pg17
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: dbname
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: on-failure
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d dbname"]
      interval: 15s
      timeout: 2s
      retries: 2

  backend:
    build: ./backend
    env_file: ./backend/.env
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    restart: on-failure
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 20s
      timeout: 2s
      retries: 2
    develop:
      watch:
        - action: sync
          path: ./backend/app
          target: /app
          ignore:
            - .venv/
            - __pycache__/
        - action: rebuild
          path: ./backend/uv.lock

  frontend:
    build: ./frontend
    ports:
      - "5173:5173"
    depends_on:
      backend:
        condition: service_healthy
    restart: on-failure
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5173/"]
      interval: 30s
      timeout: 2s
      retries: 2
    develop:
      watch:
        - action: sync
          path: ./frontend/app
          target: /app/app
        - action: rebuild
          path: ./frontend/pnpm-lock.yaml

volumes:
  postgres_data: